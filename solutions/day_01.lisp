(defun day01a ()
  (with-open-file (s "inputs/day_01.txt")
    (let ((result 0))
      (do ((l (read-line s) (read-line s nil 'eof)))
          ((eq l 'eof))
       (setf result (+ result (-  (floor (/ (parse-integer l) 3)) 2))))
       result)))

(defun day01b ()
  (with-open-file (s "inputs/day_01.txt")
    (let ((result 0))
      (defun calc-fuel (mass)
        (let ((tmp (-  (floor (/ mass 3)) 2)))
          (if (> tmp 0)
              (+ tmp (calc-fuel tmp))
              0)))
      (do ((l (read-line s) (read-line s nil 'eof)))
          ((eq l 'eof))
       (setf result (+ result (calc-fuel (parse-integer l)))))
      result)))
